#pragma once
//设计一个算法对该串中各个不同字符出现的频率进行统计
class CString
{
private:
	//指向要统计的字符串
	char* str; 
	//动态分配二维空间，用以存放str所指字符串中出现的字符及其出现的次数\
	(次数在存放时，用该数字对应的ASCII编码值存放；在输出次数时，输出该ASCII字符对应的ASCII编码值即可）
	char (*p)[2];
	//存放字符串中出现的所有不同的字符的个数
	int size;
public:
	//根据s参数初始化数据成员str；p和size初始值为0
	CString(char* s);
	//p根据s所指字符串长度分配空间。然后把str所指字符串中的每个字符放入p数组中，设置每个字符的出现次数为1。\
	根据p数组统计不同字符出现的频率，并求得size的实际大小。\
	最后根据size的实际大小，重新分配p所指空间，并把不同字符及其出现次数重新放回p数组（提示：可以借助临时数组或指针来实现）
	void Count();
	//屏幕显示字符串、字符串的每个字符和与之对应的次数
	void Show();
	//释放动态分配的空间
	~CString();
};

